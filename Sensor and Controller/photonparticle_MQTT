#include "MQTT.h"

int led1 = D7;
int sensorPin = A4;

String id = "s-002";

String mm;
char* sendMoisture;

void callback(char* topic, byte* payload, unsigned int length);

MQTT client("m13.cloudmqtt.com", 16965, callback);

// recieve message
void callback(char* topic, byte* payload, unsigned int length) {
    char p[length + 1];
    memcpy(p, payload, length);
    p[length] = NULL;
    
    String message(p);
    
    mm=message;
    
}


void setup() {
    
    RGB.control(true);

    pinMode(led1, OUTPUT);
    
    RGB.control(true);

    // connect to the server
    client.connect("m13.cloudmqtt.com","oebptugj","yFtO2mJROP9s");
    
    if (client.isConnected()) {
        client.subscribe("/sensor/"+id+"/config");
        delay(1000);
        client.publish("/mqtt-config/sensors","{ \"id\": \""+id+"\"}");
    }
}

void loop() {
    
    int maximum = maxRand(60);
    
    float moisture;
    int analogValue;
    analogValue = analogRead(sensorPin);
    moisture = ( (analogValue/4095.00) * 100 );
    
    if (client.isConnected()){
        client.publish("/mqtt-data/moisture","{ \"id\": \""+id+"\",\"moisture\": \""+String(maximum)+"\"}");
        //client.publish("/"+mm+"/"+id+"/moisture","{ \"id\": \""+id+"\",\"moisture\": \""+String(moisture)+"\"}");
        client.publish("/"+mm+"/"+id+"/moisture","{ \"id\": \""+id+"\",\"moisture\": \""+String(maximum)+"\"}");
        //client.publish("/1/"+String(id)+"/moisture",String(moisture));
        client.loop();
        delay(10000);
    }
    
}

int maxRand(int maximum) {
    return rand()%maximum+1;
}
